services:
  postgres_db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: universidad
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_db
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  servicioa:
    build: ./ServicioA
    container_name: servicioa
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__DefaultConnection: Host=postgres_db;Database=universidad;Username=postgres;Password=123456789
      Redis__ConnectionString: redis:6379
      SEED: "true"
    ports:
      - "5001:5000"

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    restart: always
    depends_on:
      - postgres_db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"

volumes:
  pgdata:
